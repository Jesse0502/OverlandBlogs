{"version":3,"sources":["components/customHooks/useFetch.js","components/Login.js","components/Register.js","components/contexts/context.js","components/customHooks/useAuth.js","components/Dashboard/CreateBlog.js","components/assets/images/question-mark-img.JPEG","components/Dashboard/Comments.js","components/Dashboard/Blog.js","components/Dashboard/Blogs.js","components/Dashboard/Dashboard.js","components/navbar/NavNotLoggedIn.js","components/navbar/NavLoggedIn.js","components/navbar/Nav.js","App.js","index.js"],"names":["useFetch","url","type","postBody","useState","fetchData","setFetchData","fetchError","setFetchErr","fetchIsPending","setFetchIsPending","useEffect","done","fetch","then","res","json","result","catch","err","message","method","mode","cache","credentials","headers","body","JSON","stringify","Login","loginData","setLoginData","spinner","setSpinner","show","setShow","localStorage","setItem","token","window","location","href","bg","h","color","onSubmit","e","preventDefault","userData","email","target","value","password","gap","px","py","boxShadow","w","md","base","flexDir","textAlign","Link","id","isRequired","name","borderColor","_placeholder","placeholder","autoComplete","size","pr","width","onClick","_hover","_active","thickness","speed","emptyColor","msg","success","Register","passwordErr","setPasswordErr","formData","setFormData","handleClick","ok","regData","my","minLength","userLoginContext","createContext","themeContext","useAuth","userLoggedIn","setUserLoggedIn","getItem","user","jwt","decode","CreateBlog","data","setUrl","setPostBody","uploadImg","setUploadImg","lg","m","blogData","title","author","authorID","image","authorImage","console","log","pb","required","border","p","onChange","preview","document","querySelector","file","files","reader","FileReader","onloadend","src","readAsDataURL","objectFit","alt","isDisabled","isIndeterminate","Comments","blogID","comments","open","setOpen","comment","setComment","commentData","setCommentData","userDetail","setUserDetail","transition","transitionDuration","rounded","ChevronUp","mx","ChevronDown","display","overflowY","maxH","map","mr","fontSize","fontWeight","formatDistanceToNow","createdAt","addSuffix","mt","opacity","Date","now","Blog","blog","userExists","setUserExits","postbody","setPostbody","deleted","setDeleted","likes","readFullExpand","setReadFullExpand","overflowWrap","borderRadius","pt","cursor","onMouseOver","pos","noImage","borderTopRadius","autoSelect","top","right","outline","outlineColor","as","Button","alert","bgColor","ExternalLink","Edit","_id","Delete","View","noOfLines","textOverflow","justify","variant","Blogs","setUser","minH","blogs","colorScheme","Dashboard","setUserData","textDecor","alignItems","NavNotLoggedIn","NavLoggedIn","handleTheme","removeItem","justifyContent","ml","Nav","useContext","currentTheme","setCurrentTheme","zIndex","App","colors","extendTheme","brand","main","bgText","text","subText","setUserLogin","userLogin","className","theme","Provider","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77ead0b0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction useFetch(url, type, postBody) {\r\n  const [fetchData, setFetchData] = useState('');\r\n  const [fetchError, setFetchErr] = useState('');\r\n  const [fetchIsPending, setFetchIsPending] = useState(true);\r\n  useEffect(() => {\r\n    let done = false;\r\n    function getData() {\r\n      if (type === 'GET' && !done) {\r\n        fetch(`https://s5po6.sse.codesandbox.io/${url}`)\r\n          .then((res) => {\r\n            setFetchIsPending(false);\r\n            return res.json();\r\n          })\r\n          .then((result) => {\r\n            setFetchData(result);\r\n            setFetchErr(null);\r\n          })\r\n          .catch((err) => {\r\n            setFetchErr(err.message);\r\n            setFetchIsPending(false);\r\n          });\r\n      }\r\n      if (type === 'POST' && postBody && !done) {\r\n        fetch(`https://s5po6.sse.codesandbox.io${url}`, {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          cache: 'no-cache',\r\n          credentials: 'same-origin',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(postBody),\r\n        })\r\n          .then((res) => {\r\n            return res.json();\r\n          })\r\n          .then((result) => {\r\n            setFetchIsPending(false);\r\n            setFetchData(result);\r\n          })\r\n          .catch((err) => {\r\n            setFetchErr(err);\r\n            setFetchIsPending(false);\r\n          });\r\n      }\r\n    }\r\n    getData();\r\n    return () => {\r\n      done = true;\r\n    };\r\n  }, [url, postBody && postBody]);\r\n\r\n  return { fetchData, fetchIsPending, fetchError };\r\n}\r\n\r\nexport default useFetch;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\r\nimport { Box, Center, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Spinner } from '@chakra-ui/react';\r\nimport useFetch from './customHooks/useFetch';\r\nimport { LinkIcon } from '@chakra-ui/icons';\r\nfunction Login() {\r\n  const [loginData, setLoginData] = useState();\r\n  const [spinner, setSpinner] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => {\r\n    if (show) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: e.target[0].value,\r\n      password: e.target[1].value,\r\n    };\r\n    setLoginData(userData);\r\n    setSpinner(false);\r\n  };\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    '/login',\r\n    'POST',\r\n    loginData\r\n  );\r\n  useEffect(() => {\r\n    fetchData && setSpinner(true);\r\n  }, [fetchData]);\r\n  !fetchIsPending && localStorage.setItem('token', fetchData.token);\r\n  if (fetchData.token) {\r\n    window.location.href = '/';\r\n  }\r\n\r\n  return (\r\n    <Center bg='brand.bg' h='94vh' color='brand.text'>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid\r\n          // border=' 2px solid black'\r\n          gap='10'\r\n          px='10'\r\n          py='32'\r\n          boxShadow='2xl'\r\n          w={{ md: '2xl', base: 'max' }}\r\n          flexDir='column'>\r\n          <Heading textAlign='center' color='brand.main'>\r\n            Login <LinkIcon />\r\n          </Heading>\r\n          <FormControl id='email' isRequired>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              name='email'\r\n              borderColor='brand.subText'\r\n              type='email'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              placeholder='Enter Email'\r\n              autoComplete='false'\r\n            />\r\n          </FormControl>\r\n          <FormControl id='passoword' isRequired>\r\n            <FormLabel>Password</FormLabel>\r\n            <InputGroup size='md'>\r\n              <Input\r\n                pr='4.5rem'\r\n                type={show ? 'text' : 'password'}\r\n                placeholder='Enter password'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                borderColor='brand.subText'\r\n              />\r\n              <InputRightElement width='4.5rem'>\r\n                <Button\r\n                  h='1.75rem'\r\n                  size='sm'\r\n                  onClick={handleClick}\r\n                  color='brand.text'\r\n                  bg='transparent'\r\n                  _hover='none'\r\n                  _active='none'>\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </FormControl>\r\n          <Box>\r\n            <Button\r\n              type='submit'\r\n              bg='brand.main'\r\n              borderColor='brand.subText'\r\n              w='full'\r\n              _hover='none'\r\n              color='brand.bgText'>\r\n              {spinner ? (\r\n                'Submit'\r\n              ) : (\r\n                <Spinner\r\n                  thickness='4px'\r\n                  speed='0.65s'\r\n                  emptyColor='gray.200'\r\n                  color='brand.main'\r\n                  size='md'\r\n                />\r\n              )}\r\n            </Button>\r\n            <Text color='red'>{fetchData.msg}</Text>\r\n            <Text color='green'>{fetchData.success}</Text>\r\n          </Box>\r\n        </Grid>\r\n      </form>\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useFetch from './customHooks/useFetch';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\r\nimport { Box, Center, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport { Spinner } from '@chakra-ui/react';\r\nimport { Button } from '@chakra-ui/button';\r\n\r\nimport { LinkIcon } from '@chakra-ui/icons';\r\nfunction Register() {\r\n  const [passwordErr, setPasswordErr] = useState();\r\n  const [formData, setFormData] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  const handleClick = () => {\r\n    if (show) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (e.target[2].value !== e.target[4].value) {\r\n      return setPasswordErr('Passwords must match');\r\n    }\r\n    const regData = {\r\n      name: e.target[0].value,\r\n      email: e.target[1].value,\r\n      password: e.target[2].value,\r\n    };\r\n    setFormData(regData);\r\n  };\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    '/register',\r\n    'POST',\r\n    formData\r\n  );\r\n  if (fetchData.ok) {\r\n    window.location.href = '/';\r\n  }\r\n  return (\r\n    <Center bg='brand.bg' color='brand.text'>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid\r\n          // border=' 2px solid black'\r\n          gap='7'\r\n          px='10'\r\n          my='6'\r\n          py='20'\r\n          // h='96'\r\n          boxShadow='2xl'\r\n          w={{ md: '2xl', base: 'max' }}\r\n          flexDir='column'>\r\n          <Heading textAlign='center' color='brand.main'>\r\n            Register <LinkIcon />\r\n          </Heading>\r\n          <FormControl id='email' isRequired>\r\n            <FormLabel>Name</FormLabel>\r\n            <Input\r\n              name='name'\r\n              borderColor='brand.subText'\r\n              type='text'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              placeholder='Enter Name'\r\n              autoComplete='false'\r\n            />\r\n          </FormControl>\r\n          <FormControl id='email' isRequired>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              name='email'\r\n              borderColor='brand.subText'\r\n              type='email'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              placeholder='Enter Email'\r\n              autoComplete='false'\r\n            />\r\n          </FormControl>\r\n          <FormControl id='passoword' isRequired>\r\n            <FormLabel>Password</FormLabel>\r\n            <InputGroup size='md'>\r\n              <Input\r\n                pr='4.5rem'\r\n                minLength={10}\r\n                type={show ? 'text' : 'password'}\r\n                placeholder='Enter password'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                borderColor='brand.subText'\r\n              />\r\n              <InputRightElement width='4.5rem'>\r\n                <Button\r\n                  h='1.75rem'\r\n                  size='sm'\r\n                  onClick={handleClick}\r\n                  color='brand.text'\r\n                  bg='transparent'\r\n                  _hover='none'\r\n                  _active='none'>\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </FormControl>\r\n          <FormControl id='passoword' isRequired>\r\n            <FormLabel>Confirm Password</FormLabel>\r\n            <InputGroup size='md'>\r\n              <Input\r\n                pr='4.5rem'\r\n                type={show ? 'text' : 'password'}\r\n                placeholder='Enter password'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                borderColor='brand.subText'\r\n              />\r\n              <InputRightElement width='4.5rem'>\r\n                <Button\r\n                  h='1.75rem'\r\n                  size='sm'\r\n                  onClick={handleClick}\r\n                  color='brand.text'\r\n                  bg='transparent'\r\n                  _hover='none'\r\n                  _active='none'>\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </FormControl>\r\n          <Box>\r\n            <Button\r\n              type='submit'\r\n              bg='brand.main'\r\n              borderColor='brand.subText'\r\n              w='full'\r\n              _hover='none'\r\n              color='brand.bgText'>\r\n              {spinner ? (\r\n                'Submit'\r\n              ) : (\r\n                <Spinner\r\n                  thickness='4px'\r\n                  speed='0.65s'\r\n                  emptyColor='gray.200'\r\n                  color='brand.main'\r\n                  size='md'\r\n                />\r\n              )}\r\n            </Button>\r\n            <Text color='red'>{fetchData.msg}</Text>\r\n            <Text color='green'>{fetchData.success}</Text>\r\n            <Text color='crimson'>{fetchData.msg}</Text>\r\n            <Text color='crimson'>{fetchError.msg}</Text>\r\n            <Text color='crimson'>{passwordErr}</Text>\r\n          </Box>\r\n        </Grid>\r\n      </form>\r\n      {/* <form onSubmit={handleSubmit}>\r\n        <label>Name</label>\r\n        <input name='name' type='text' required />\r\n        <label>Email</label>\r\n        <input name='email' type='email' required />\r\n        <label>Pass</label>\r\n        <input name='password' type='password' required />\r\n        <label>Confirm Pass</label>\r\n        <input name='password' type='password' required />\r\n        <input type='submit' value='Submit' />\r\n      </form> */}\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { createContext } from 'react';\r\n\r\nexport const userLoginContext = createContext();\r\nexport const themeContext = createContext();\r\n","import React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken';\r\nfunction useAuth() {\r\n  const [userLoggedIn, setUserLoggedIn] = useState();\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (user) {\r\n        setUserLoggedIn(user);\r\n      } else {\r\n        setUserLoggedIn(null);\r\n      }\r\n    }\r\n  }, []);\r\n  return { userLoggedIn };\r\n}\r\n\r\nexport default useAuth;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\r\nimport { Box, Center, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Spinner } from '@chakra-ui/spinner';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { Textarea } from '@chakra-ui/textarea';\r\nimport {\r\n  CircularProgress,\r\n  CircularProgressLabel,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nfunction CreateBlog({ data, user }) {\r\n  const [url, setUrl] = useState();\r\n  const [postBody, setPostBody] = useState();\r\n  const [uploadImg, setUploadImg] = useState();\r\n  const [spinner, setSpinner] = useState(true);\r\n  const [editor, setEditor] = useState();\r\n  function previewFile() {\r\n    var preview = document.querySelector('#img');\r\n    var file = document.querySelector('input[type=file]').files[0];\r\n    var reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      preview.src = reader.result;\r\n      setUploadImg(reader.result);\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      preview.src = '';\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blogData = {\r\n      title: e.target[0].value,\r\n      body: e.target[1].value,\r\n      author: data.name,\r\n      authorID: user.id,\r\n      image: uploadImg ?? '',\r\n      authorImage: data.image,\r\n    };\r\n    setUrl('/');\r\n    setPostBody(blogData);\r\n    setSpinner(false);\r\n    console.log(blogData);\r\n  };\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    url,\r\n    'POST',\r\n    postBody\r\n  );\r\n  useEffect(() => {\r\n    if (fetchData) {\r\n      window.location.href = '/';\r\n    }\r\n    fetchData && setSpinner(true);\r\n  }, [fetchData]);\r\n  return (\r\n    <Box w='96' px={{ lg: '0', base: '2' }} m={{ base: 'auto', lg: '0' }}>\r\n      {/* <Center>\r\n        <Button color='brand.main' bg='brand.bg'>\r\n          Create Blog\r\n        </Button>\r\n      </Center> */}\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl>\r\n          <Heading color='brand.main'>Create Blog</Heading>\r\n          <Grid py='5' pb='2' w={{ lg: 'full', base: '96' }}>\r\n            <FormLabel>Title</FormLabel>\r\n            <Textarea\r\n              type='text'\r\n              placeholder='Title for your blog'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              borderColor='brand.subText'\r\n              required\r\n            />\r\n            <Box py='2'>\r\n              <FormLabel>Body</FormLabel>\r\n              <Textarea\r\n                required\r\n                borderColor='brand.subText'\r\n                placeholder='Describe your Blog'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                type='text'\r\n              />\r\n            </Box>\r\n            <FormLabel>Image</FormLabel>\r\n            <Input\r\n              type='file'\r\n              border='none'\r\n              p='0px'\r\n              m='0px'\r\n              onChange={previewFile}\r\n            />\r\n            <Image\r\n              w={{ lg: 'full', base: '96' }}\r\n              objectFit='cover'\r\n              src=''\r\n              alt=''\r\n              id='img'\r\n            />\r\n          </Grid>\r\n          <Button\r\n            type='submit'\r\n            bg='brand.main'\r\n            borderColor='brand.subText'\r\n            w='full'\r\n            isDisabled={!spinner}\r\n            _hover='none'\r\n            color='brand.bgText'>\r\n            {spinner ? (\r\n              'Submit'\r\n            ) : (\r\n              <CircularProgress\r\n                isIndeterminate\r\n                color='brand.main'\r\n                size='30px'\r\n                thickness='12'\r\n              />\r\n            )}\r\n          </Button>\r\n\r\n          {fetchData.success && <Text>{fetchData.success}</Text>}\r\n        </FormControl>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateBlog;\r\n","export default __webpack_public_path__ + \"static/media/question-mark-img.1287f47e.JPEG\";","import React, { useEffect, useState } from 'react';\r\nimport { Image } from '@chakra-ui/image';\r\nimport { Box, Flex, Grid, Heading, Text, Center } from '@chakra-ui/layout';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport { Button } from '@chakra-ui/button';\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Avatar,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { CircularProgress } from '@chakra-ui/react';\r\nfunction Comments({ user, blogID, comments }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [url, setUrl] = useState();\r\n  const [postBody, setPostBody] = useState();\r\n  const [comment, setComment] = useState(false);\r\n  const [commentData, setCommentData] = useState(null);\r\n  const [userDetail, setUserDetail] = useState();\r\n  const handleOpen = () => {\r\n    if (open) {\r\n      setOpen(false);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n    setComment(true);\r\n    setUrl('/blog/comment/' + blogID + '?_method=PUT');\r\n    setPostBody({\r\n      comment: document.querySelector('#form')[0].value,\r\n      createdAt: Date.now(),\r\n      user: user.id,\r\n      image: userDetail.image,\r\n      name: userDetail.name,\r\n    });\r\n    console.log(document.querySelector('#form')[0].value);\r\n  };\r\n  useEffect(() => {\r\n    fetch(`https://s5po6.sse.codesandbox.io/user/${user.id}`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setUserDetail(result);\r\n        console.log(comments);\r\n      })\r\n      .catch((err) => {});\r\n  }, []);\r\n  useEffect(() => {\r\n    fetch(`https://s5po6.sse.codesandbox.io/blog/comments/${blogID}`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setComment(false);\r\n        setCommentData(result.comments);\r\n        document.querySelector('#form')[0].value = null;\r\n      })\r\n      .catch((err) => {});\r\n  }, [open, comment]);\r\n  const { fetchData, fetchError, fetchIsPending } = useFetch(\r\n    url,\r\n    'POST',\r\n    postBody\r\n  );\r\n  return (\r\n    <Box transition='ease' transitionDuration='0.3s'>\r\n      <Center py='3'>\r\n        <Button\r\n          onClick={handleOpen}\r\n          rounded='2xl'\r\n          bg='brand.bg'\r\n          color='brand.text'\r\n          _hover={{ bg: 'whiteAlpha.300' }}>\r\n          Comments\r\n          {!open ? <ChevronDownIcon mx='1' /> : <ChevronUpIcon mx='1' />}\r\n        </Button>\r\n      </Center>\r\n      <Box display={open ? 'block' : 'none'}>\r\n        <Box\r\n          overflowY='auto'\r\n          maxH='500px'\r\n          transition='ease'\r\n          transitionDuration='0.3s'>\r\n          {commentData ? (\r\n            commentData.map((comment) => (\r\n              <Flex px='5' py='3' key={comment.createdAt}>\r\n                <Avatar src={comment.image} mr='4' />\r\n                <Flex flexDir='column'>\r\n                  <Heading fontSize='md'>\r\n                    {comment.name}{' '}\r\n                    <span>\r\n                      &#8226;\r\n                      <Text\r\n                        fontWeight='normal'\r\n                        fontSize='sm'\r\n                        color='brand.subText'\r\n                        display='inline-block'\r\n                        px='1'>\r\n                        {formatDistanceToNow(comment.createdAt, {\r\n                          addSuffix: true,\r\n                        })}\r\n                      </Text>\r\n                    </span>{' '}\r\n                  </Heading>\r\n\r\n                  <Text mt='1' color='brand.text' opacity='0.7'>\r\n                    {comment.comment}\r\n                  </Text>\r\n                </Flex>\r\n              </Flex>\r\n            ))\r\n          ) : (\r\n            <Center my='5'>\r\n              <Text fontWeight='bold'>Hold on!</Text>\r\n              <Text mx='2'>Getting comments...</Text>\r\n              <CircularProgress size='6' isIndeterminate color='brand.main' />\r\n            </Center>\r\n          )}\r\n        </Box>\r\n        {open && (\r\n          <form onSubmit={handleComment} id='form'>\r\n            <Center px='3' py='3'>\r\n              <Avatar src={userDetail.image} />\r\n              <Input\r\n                mx='4'\r\n                borderColor='brand.subText'\r\n                placeholder='Comment something...'\r\n                border='1px'\r\n                borderColor='brand.subText'\r\n                _placeholder={{ color: 'brand.subText' }}\r\n              />\r\n\r\n              <Button\r\n                bg='brand.main'\r\n                _hover='none'\r\n                _active='none'\r\n                isDisabled={comment}\r\n                color='white'\r\n                w='32'\r\n                type='submit'>\r\n                {!comment ? (\r\n                  <Text>Submit</Text>\r\n                ) : (\r\n                  <Center>\r\n                    <CircularProgress\r\n                      size='6'\r\n                      isIndeterminate\r\n                      color='brand.main'\r\n                    />\r\n                  </Center>\r\n                )}\r\n              </Button>\r\n            </Center>\r\n          </form>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Image } from '@chakra-ui/image';\r\nimport { Box, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Menu, MenuButton, MenuList, MenuItem, Avatar } from '@chakra-ui/react';\r\nimport {\r\n  ExternalLinkIcon,\r\n  EditIcon,\r\n  ViewIcon,\r\n  DeleteIcon,\r\n} from '@chakra-ui/icons'; \r\nimport useFetch from '../customHooks/useFetch';\r\nimport noImage from '../assets/images/question-mark-img.JPEG';\r\nimport Comments from './Comments';\r\nfunction Blog({ blog, user }) {\r\n  const [userExists, setUserExits] = useState(false);\r\n  useEffect(() => {\r\n    if (blog.authorID === user.id) {\r\n      setUserExits(true);\r\n    }\r\n  });\r\n  const [url, setUrl] = useState();\r\n  const [postbody, setPostbody] = useState();\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [fakeLike, setFakeLike] = useState(blog.likes);\r\n  const [readFullExpand, setReadFullExpand] = useState(3);\r\n  const handlefullBody = () => {\r\n    if (readFullExpand == 3) {\r\n      setReadFullExpand(null);\r\n    } else {\r\n      setReadFullExpand(3);\r\n    }\r\n  };\r\n  const handleDelete = () => {\r\n    setUrl('/blog/' + blog._id + '?_method=DELETE');\r\n    setPostbody({ blogID: blog._id });\r\n    setDeleted(true);\r\n  };\r\n\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    url,\r\n    'POST',\r\n    postbody\r\n  );\r\n  return (\r\n    <Flex\r\n      overflowWrap='break-word'\r\n      display={!deleted ? 'flex' : 'none'}\r\n      key={blog._id}\r\n      // overflowY='hidden'\r\n      w={{ base: '60%', lg: 'full' }}\r\n      py='6'\r\n      transition='ease'\r\n      borderRadius='10'\r\n      transitionDuration='0.3s'>\r\n      <Flex flexDir='column' px={{ lg: '5', base: '2' }} pt='10'>\r\n        <Box\r\n          display={{ base: 'none', lg: 'contents' }}\r\n          _hover={{ opacity: '0.8', cursor: 'pointer' }}\r\n          onMouseOver={() => {}}>\r\n          <Avatar size='md' src={blog.authorImage} />\r\n        </Box>\r\n      </Flex>\r\n      <Box>\r\n        <Text\r\n          color='brand.subText'\r\n          py='2'\r\n          transition='ease'\r\n          transitionDuration='0.3s'\r\n          _hover={{\r\n            color: 'brand.text',\r\n            cursor: 'pointer',\r\n          }}>\r\n          Created{' '}\r\n          {formatDistanceToNow(new Date(blog.createdAt), {\r\n            addSuffix: true,\r\n          })}\r\n        </Text>\r\n        <Box boxShadow='lg' borderRadius='10' w={{ lg: 'full', base: '96' }}>\r\n          <Box pos='relative'>\r\n            <Image\r\n              transition='ease'\r\n              transitionDuration='0.3s'\r\n              _hover={{ opacity: '0.8' }}\r\n              src={blog.image ? blog.image : noImage}\r\n              h='200px'\r\n              objectFit='cover'\r\n              w='100vh'\r\n              borderTopRadius='10'\r\n            />\r\n            <Menu autoSelect={false}>\r\n              <MenuButton\r\n                pos='absolute'\r\n                top='5px'\r\n                right='5px'\r\n                _hover={{\r\n                  outline: 'none',\r\n                }}\r\n                _active={{\r\n                  outline: '1px solid black',\r\n                  outlineColor: 'brand.bg',\r\n                }}\r\n                as={Button}\r\n                px='4'\r\n                borderRadius='10'\r\n                bg='whiteAlpha.500'\r\n                color='blackAlpha.800'>\r\n                {/* <TriangleDownIcon /> */}\r\n                &#8226;&#8226;&#8226;\r\n              </MenuButton>\r\n              <MenuList\r\n                bg='brand.bg'\r\n                color='brand.text'\r\n                border='2px solid black'\r\n                borderColor='#a3a3a3'>\r\n                <MenuItem\r\n                  onClick={() => alert('Read')}\r\n                  _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                  _active='none'\r\n                  bg='transparent'\r\n                  color='brand.text'>\r\n                  <ExternalLinkIcon mr='2' /> Goto Profile\r\n                </MenuItem>\r\n                {userExists ? (\r\n                  <MenuItem\r\n                    onClick={() => alert('edit')}\r\n                    _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                    _active='none'\r\n                    bg='transparent'\r\n                    color='brand.text'>\r\n                    <EditIcon mr='2' /> Edit\r\n                  </MenuItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {userExists ? (\r\n                  <MenuItem\r\n                    onClick={handleDelete}\r\n                    _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                    _active='none'\r\n                    bg='transparent'\r\n                    color='brand.text'>\r\n                    <DeleteIcon mr='2' /> Delete\r\n                  </MenuItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                <MenuItem\r\n                  onClick={() => alert('Read')}\r\n                  _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                  _active='none'\r\n                  bg='transparent'\r\n                  color='brand.text'>\r\n                  <ViewIcon mr='2' />\r\n                  Read full\r\n                </MenuItem>\r\n              </MenuList>\r\n            </Menu>\r\n          </Box>\r\n          <Grid flexDir='column' gap='6' p='5'>\r\n            <Heading\r\n              color='brand.main'\r\n              w='100%'\r\n              overflowWrap='break-word'\r\n              transition='ease'\r\n              transitionDuration='0.3s'\r\n              _hover={{\r\n                // color: 'brand.text',\r\n                cursor: 'pointer',\r\n                opacity: '0.9',\r\n              }}>\r\n              {blog.title}\r\n            </Heading>\r\n            {user ? (\r\n              <Text fontWeight='bold'> {blog.author}</Text>\r\n            ) : (\r\n              <Text fontWeight='bold'>Anonymous</Text>\r\n            )}\r\n\r\n            <Text\r\n              noOfLines={readFullExpand}\r\n              transitionDuration='0.3s'\r\n              transition='ease'\r\n              textOverflow='ellipsis'>\r\n              {blog.body}\r\n            </Text>\r\n            <Flex justify='flex-start'>\r\n              <Button variant='link' onClick={handlefullBody}>\r\n                {readFullExpand ? 'Read more' : 'Read Less'}\r\n              </Button>\r\n            </Flex>\r\n            {/* <Flex>\r\n              <Flex>\r\n                <Image\r\n                  src={!liked ? unlikeButton : likeButton}\r\n                  color='brand.text'\r\n                  cursor='pointer'\r\n                  onClick={handleLike}\r\n                />\r\n                <Text px='1' fontWeight='bold'>\r\n                  {fakeLike}\r\n                </Text>\r\n              </Flex>\r\n            </Flex> */}\r\n          </Grid>\r\n          {user && (\r\n            <Comments user={user} blogID={blog._id} comments={blog.comments} />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { Box, Center, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport { Image } from '@chakra-ui/image';\r\nimport Blog from './Blog';\r\nimport jwt from 'jsonwebtoken';\r\nimport { Progress } from '@chakra-ui/react';\r\n\r\nfunction Blogs() {\r\n  const [url, setUrl] = useState();\r\n  const [fetchData, setFetchData] = useState();\r\n  const [user, setUser] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n      }\r\n    }\r\n  }, []);\r\n  function getData() {\r\n    fetch(`https://s5po6.sse.codesandbox.io/blogs`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setFetchData(result);\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n  return (\r\n    <Box w={{ lg: '65%', base: 'full' }} minH='120vh'>\r\n      {fetchData ? (\r\n        fetchData.blogs.map((blog) => <Blog blog={blog} user={user} />)\r\n      ) : (\r\n        <Box>\r\n          <Progress\r\n            isIndeterminate\r\n            size='xs'\r\n            colorScheme='green'\r\n            rounded='sm'\r\n          />\r\n          <Center fontSize='2xl'>Getting Blogs...</Center>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Blogs;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { userLoginContext } from '../contexts/context';\r\nimport useAuth from '../customHooks/useAuth';\r\nimport jwt from 'jsonwebtoken';\r\nimport {\r\n  Box,\r\n  Center,\r\n  Divider,\r\n  Flex,\r\n  Grid,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  Wrap,\r\n} from '@chakra-ui/layout';\r\nimport CreateBlog from './CreateBlog';\r\nimport Blogs from './Blogs';\r\nimport { Button } from '@chakra-ui/button';\r\n\r\nfunction Dashboard() {\r\n  const [url, setUrl] = useState();\r\n  const [userData, setUserData] = useState();\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (user) {\r\n        setUrl(`user/${user.id}`);\r\n        setUserData(user);\r\n      } else {\r\n      }\r\n    }\r\n  }, []);\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(url, 'GET');\r\n  console.log(!fetchIsPending && fetchData);\r\n\r\n  return (\r\n    <Box bg='brand.bg' minH='94vh' color='brand.text'>\r\n      <Heading\r\n        textAlign='center'\r\n        pt='20'\r\n        color='brand.main'\r\n        textDecor='underline'>\r\n        Overland Blogs\r\n      </Heading>\r\n      <Flex\r\n        flexDir={{ base: 'column-reverse', lg: 'row' }}\r\n        justify='space-between'\r\n        px={{ lg: '10', base: '1' }}\r\n        w={{ lg: 'container.xl', base: '' }}\r\n        m='auto'\r\n        py={{ lg: '16', base: '10' }}>\r\n        <Blogs />\r\n        {userData ? (\r\n          <CreateBlog data={fetchData} user={userData} />\r\n        ) : (\r\n          <Box\r\n            textAlign='left'\r\n            w={{ lg: '96', base: 'full' }}\r\n            px={{ base: '5', lg: '0' }}>\r\n            <Heading color='brand.main'>Welcome to Overland Blogs</Heading>\r\n            <Text color='brand.subText' py='2'>\r\n              Please Login To Create Blog! Also, see author names, write\r\n              comments & Dark mode :)\r\n            </Text>\r\n            <Link href='/login'>\r\n              <Button\r\n                w='full'\r\n                mt='6'\r\n                _hover='none'\r\n                _active='none'\r\n                h='12'\r\n                bg='brand.main'\r\n                color='brand.bgText'>\r\n                Login\r\n              </Button>\r\n            </Link>\r\n            <Flex alignItems='center' my='3'>\r\n              <Divider />{' '}\r\n              <Text px='5' color='brand.subText'>\r\n                OR\r\n              </Text>{' '}\r\n              <Divider />\r\n            </Flex>\r\n            <Link href='/register'>\r\n              <Button\r\n                w='full'\r\n                _hover='none'\r\n                _active='none'\r\n                h='12'\r\n                color='white'\r\n                bg='twitter.700'>\r\n                Register\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n        )}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { Box } from '@chakra-ui/layout';\r\nimport React from 'react';\r\n\r\nfunction NavNotLoggedIn() {\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <Box>\r\n        <Button\r\n          onClick={() => {\r\n            window.location.href = '/login';\r\n          }}\r\n          variant='ghost'\r\n          color='brand.bgText'\r\n          _hover='none'\r\n          _active='none'>\r\n          Login\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            window.location.href = '/register';\r\n          }}\r\n          variant='ghost'\r\n          color='brand.bgText'\r\n          _hover='none'\r\n          _active='none'>\r\n          Signup\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavNotLoggedIn;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { Box, Center, Flex, Grid, Text } from '@chakra-ui/layout';\r\nimport { Switch } from '@chakra-ui/switch';\r\nimport React, { useState } from 'react';\r\nimport { Avatar } from '@chakra-ui/avatar';\r\nimport { Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/menu';\r\nimport { Portal } from '@chakra-ui/portal';\r\nimport { ChevronDownIcon, ExternalLinkIcon } from '@chakra-ui/icons';\r\nimport { Image } from '@chakra-ui/image';\r\nfunction NavLoggedIn({ fetchData, fetchIsPending, handleTheme }) {\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    window.location.href = '/';\r\n  };\r\n  console.log(fetchData.email);\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Center>\r\n      <Menu>\r\n        <MenuButton>\r\n          <Flex\r\n            p='1'\r\n            borderRadius='20'\r\n            alignItems='center'\r\n            _hover={{ borderColor: 'red' }}>\r\n            <Avatar size='sm' src={!fetchIsPending && fetchData.image}></Avatar>\r\n            {/* <ChevronDownIcon fontSize='xl' color='white' mx='1' /> */}\r\n          </Flex>\r\n        </MenuButton>\r\n        <Portal>\r\n          <MenuList>\r\n            <Image\r\n              size='sm'\r\n              w='full'\r\n              h='24'\r\n              objectFit='cover'\r\n              src={!fetchIsPending && fetchData.image}></Image>{' '}\r\n            <Text\r\n              color='brand.bgText'\r\n              fontWeight='bold'\r\n              fontSize='1.2em'\r\n              p='3'\r\n              bg='brand.main'>\r\n              Welcome back, {!fetchIsPending && fetchData.name}\r\n            </Text>\r\n            <MenuItem onClick={handleLogout}>\r\n              <Center>\r\n                <ExternalLinkIcon mr='2' />\r\n                Logout\r\n              </Center>\r\n            </MenuItem>\r\n            <MenuItem>\r\n              <Center justifyContent='space-between'>\r\n                <Text>Dark Mode</Text>\r\n                <Switch\r\n                  ml='28'\r\n                  value='dark'\r\n                  id='email-alerts'\r\n                  colorScheme='gray'\r\n                  size='md'\r\n                  onChange={handleTheme}\r\n                />\r\n              </Center>\r\n            </MenuItem>\r\n          </MenuList>\r\n        </Portal>\r\n      </Menu>\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default NavLoggedIn;\r\n","import React from 'react';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Box, Center, Flex, Heading, Text } from '@chakra-ui/layout';\r\nimport { Switch } from '@chakra-ui/switch';\r\nimport { themeContext } from '../contexts/context';\r\nimport { useContext } from 'react';\r\nimport useAuth from '../customHooks/useAuth';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from '@chakra-ui/react';\r\nimport NavNotLoggedIn from './NavNotLoggedIn';\r\nimport NavLoggedIn from './NavLoggedIn';\r\nfunction Nav() {\r\n  const [url, setUrl] = useState(null);\r\n  const { currentTheme, setCurrentTheme } = useContext(themeContext);\r\n  const { userLoggedIn } = useAuth();\r\n\r\n  const handleTheme = () => {\r\n    if (currentTheme) {\r\n      setCurrentTheme(false);\r\n    } else {\r\n      setCurrentTheme(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    localStorage.removeItem('theme');\r\n    localStorage.setItem('theme', currentTheme);\r\n  }, [currentTheme]);\r\n  useEffect(() => {\r\n    if (userLoggedIn) {\r\n      setUrl('user/' + userLoggedIn.id);\r\n    }\r\n  }, [userLoggedIn]);\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(url, 'GET');\r\n  return (\r\n    <Flex\r\n      pos='fixed'\r\n      w='100%'\r\n      zIndex='999'\r\n      justify='space-between'\r\n      h='7vh'\r\n      alignItems='center'\r\n      px='4'\r\n      bgColor='brand.main'>\r\n      <Box>\r\n        <Heading size='lg' color='brand.bgText'>\r\n          <Link href='/' _hover='none'>\r\n            Overland Blogs\r\n          </Link>\r\n        </Heading>\r\n      </Box>\r\n      {!userLoggedIn ? (\r\n        <Center>\r\n          <NavNotLoggedIn />\r\n        </Center>\r\n      ) : (\r\n        <Center>\r\n          <NavLoggedIn\r\n            fetchData={fetchData}\r\n            fetchIsPending={fetchIsPending}\r\n            handleTheme={handleTheme}\r\n          />\r\n        </Center>\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Nav from './components/navbar/Nav';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { extendTheme } from '@chakra-ui/react';\nimport { userLoginContext, themeContext } from './components/contexts/context';\nimport { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nfunction App() {\n  const [currentTheme, setCurrentTheme] = useState(false);\n\n  const colors = extendTheme(\n    //light mode\n    !currentTheme\n      ? {\n          colors: {\n            brand: {\n              main: '#1C9B75',\n              bgText: 'white',\n              text: 'black',\n              subText: 'gray',\n              bg: 'white',\n            },\n          },\n        }\n      : //dark mode\n        {\n          colors: {\n            brand: {\n              bg: '#3b4252',\n              main: '#18b888',\n              bgText: 'white',\n              text: 'white',\n              subText: '#a3a3a3',\n            },\n          },\n        }\n  );\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = jwt.decode(token);\n      if (user) {\n        setUserLogin(user);\n      }\n    }\n  }, []);\n  const [userLogin, setUserLogin] = useState(false);\n\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <ChakraProvider theme={colors}>\n          <themeContext.Provider value={{ currentTheme, setCurrentTheme }}>\n            <userLoginContext.Provider value={{ userLogin, setUserLogin }}>\n              <Nav />\n              <Switch>\n                <Route path='/' exact component={Dashboard} />\n                <Route exact path='/login' component={Login} />\n                <Route exact path='/register' component={Register} />\n              </Switch>\n            </userLoginContext.Provider>\n          </themeContext.Provider>\n        </ChakraProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}