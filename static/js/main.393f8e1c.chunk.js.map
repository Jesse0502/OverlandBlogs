{"version":3,"sources":["components/customHooks/useFetch.js","components/Login.js","components/Register.js","components/contexts/context.js","components/customHooks/useAuth.js","components/Dashboard/CreateBlog.js","components/assets/images/question-mark-img.JPEG","components/Dashboard/Comments.js","components/Dashboard/Blog.js","components/Dashboard/Blogs.js","components/Dashboard/Dashboard.js","components/navbar/NavNotLoggedIn.js","components/assets/images/logout.svg","components/assets/images/profile.svg","components/navbar/NavLoggedIn.js","components/navbar/Nav.js","components/Dashboard/UnPublishedBlogs.js","components/Profile.js","components/Edit.js","App.js","index.js"],"names":["useFetch","url","type","postBody","useState","fetchData","setFetchData","fetchError","setFetchErr","fetchIsPending","setFetchIsPending","useEffect","done","fetch","then","res","json","result","catch","err","message","method","mode","cache","credentials","headers","body","JSON","stringify","Login","loginData","setLoginData","spinner","setSpinner","show","setShow","localStorage","setItem","token","window","location","href","bg","h","color","onSubmit","e","preventDefault","userData","email","target","value","password","gap","px","py","boxShadow","w","md","base","flexDir","textAlign","Link","id","isRequired","name","borderColor","_placeholder","placeholder","autoComplete","size","pr","width","onClick","_hover","_active","isDisabled","thickness","speed","emptyColor","textDecor","msg","success","Register","passwordErr","setPasswordErr","formData","setFormData","handleClick","ok","sucess","maxH","regData","createdAt","Date","lg","mt","minLength","opacity","transition","transitionDuration","userLoginContext","createContext","themeContext","useAuth","userLoggedIn","setUserLoggedIn","getItem","user","jwt","decode","CreateBlog","data","setUrl","setPostBody","uploadImg","setUploadImg","history","useHistory","publish","setPublish","m","blogData","title","author","authorID","isPublished","image","authorImage","pb","required","border","p","onChange","preview","document","querySelector","file","files","reader","FileReader","onloadend","src","readAsDataURL","objectFit","alt","justify","isIndeterminate","goBack","display","Comments","blogID","comments","open","setOpen","comment","setComment","commentData","setCommentData","userDetail","setUserDetail","console","log","length","dropShadow","rounded","ChevronUp","mx","ChevronDown","overflowY","map","mr","cursor","fontSize","fontWeight","formatDistanceToNow","addSuffix","overflowWrap","my","now","borderTop","borderTopRadius","Blog","blog","profile","blogImageFit","setBlogImageFit","userExists","setUserExits","setPublisher","setPublishBlog","postbody","setPostbody","deleted","setDeleted","readFullExpand","setReadFullExpand","borderRadius","pt","onMouseOver","updatedAt","pos","noImage","onClickCapture","minW","autoSelect","top","right","outline","outlineColor","as","Button","bgColor","ExternalLink","confirm","_id","Edit","Delete","noOfLines","textOverflow","variant","Blogs","setUser","blogs","Dashboard","setUserData","minH","alignItems","NavNotLoggedIn","push","NavLoggedIn","handleTheme","ProfileIcon","removeItem","LogoutIcon","justifyContent","ml","colorScheme","Nav","useContext","currentTheme","setCurrentTheme","zIndex","UnPublishedBlogs","setPublished","overflow","shadow","alert","handlePublished","reload","handleDelete","Profile","props","noBlogs","setNoBlogs","userInfo","setUserInfo","undefined","match","params","ublog","filter","publisher","background","fontFamily","templateColumns","updatePending","setUpdatePending","handleSubmit","defaultValue","handleImageUpload","App","colors","extendTheme","brand","main","bgText","text","subText","gray","setUserLogin","userLogin","className","theme","Provider","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.393f8e1c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction useFetch(url, type, postBody) {\r\n  const [fetchData, setFetchData] = useState('');\r\n  const [fetchError, setFetchErr] = useState('');\r\n  const [fetchIsPending, setFetchIsPending] = useState(true);\r\n  useEffect(() => {\r\n    let done = false;\r\n    function getData() {\r\n      if (type === 'GET' && !done) {\r\n        fetch(`https://s5po6.sse.codesandbox.io/${url}`)\r\n          .then((res) => {\r\n            setFetchIsPending(false);\r\n            return res.json();\r\n          })\r\n          .then((result) => {\r\n            setFetchData(result);\r\n            setFetchErr(null);\r\n          })\r\n          .catch((err) => {\r\n            setFetchErr(err.message);\r\n            setFetchIsPending(false);\r\n          });\r\n      }\r\n      if (type === 'POST' && postBody && !done) {\r\n        fetch(`https://s5po6.sse.codesandbox.io${url}`, {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          cache: 'no-cache',\r\n          credentials: 'same-origin',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(postBody),\r\n        })\r\n          .then((res) => {\r\n            return res.json();\r\n          })\r\n          .then((result) => {\r\n            setFetchIsPending(false);\r\n            setFetchData(result);\r\n          })\r\n          .catch((err) => {\r\n            setFetchErr(err);\r\n            setFetchIsPending(false);\r\n          });\r\n      }\r\n    }\r\n    getData();\r\n    return () => {\r\n      done = true;\r\n    };\r\n  }, [url, postBody && postBody]);\r\n\r\n  return { fetchData, fetchIsPending, fetchError };\r\n}\r\n\r\nexport default useFetch;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\r\nimport {\r\n  Box,\r\n  Center,\r\n  Flex,\r\n  Grid,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n} from '@chakra-ui/layout';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Spinner } from '@chakra-ui/react';\r\nimport useFetch from './customHooks/useFetch';\r\nimport { LinkIcon } from '@chakra-ui/icons';\r\nfunction Login() {\r\n  const [loginData, setLoginData] = useState();\r\n  const [spinner, setSpinner] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => {\r\n    if (show) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: e.target[0].value,\r\n      password: e.target[1].value,\r\n    };\r\n    setLoginData(userData);\r\n    setSpinner(false);\r\n  };\r\n  const handleTestUser = (e) => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: 'test@test.com',\r\n      password: 'test123456',\r\n    };\r\n    setLoginData(userData);\r\n    setSpinner(false);\r\n  };\r\n\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    '/login',\r\n    'POST',\r\n    loginData\r\n  );\r\n  useEffect(() => {\r\n    fetchData && setSpinner(true);\r\n  }, [fetchData]);\r\n  !fetchIsPending && localStorage.setItem('token', fetchData.token);\r\n  if (fetchData.token) {\r\n    window.location.href = '/';\r\n  }\r\n\r\n  return (\r\n    <Center bg='brand.bg' h='94vh' color='brand.text'>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid\r\n          // border=' 2px solid black'\r\n          gap='10'\r\n          px='10'\r\n          py='32'\r\n          boxShadow='2xl'\r\n          w={{ md: '2xl', base: 'max' }}\r\n          flexDir='column'>\r\n          <Heading textAlign='center' color='brand.main'>\r\n            Login <LinkIcon />\r\n          </Heading>\r\n          <FormControl id='email' isRequired>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              name='email'\r\n              borderColor='brand.subText'\r\n              type='email'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              placeholder='Enter Email'\r\n              autoComplete='false'\r\n            />\r\n          </FormControl>\r\n          <FormControl id='passoword' isRequired>\r\n            <FormLabel>Password</FormLabel>\r\n            <InputGroup size='md'>\r\n              <Input\r\n                pr='4.5rem'\r\n                type={show ? 'text' : 'password'}\r\n                placeholder='Enter password'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                borderColor='brand.subText'\r\n              />\r\n              <InputRightElement width='4.5rem'>\r\n                <Button\r\n                  h='1.75rem'\r\n                  size='sm'\r\n                  onClick={handleClick}\r\n                  color='brand.text'\r\n                  bg='transparent'\r\n                  _hover='none'\r\n                  _active='none'>\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </FormControl>\r\n          <Box>\r\n            <Button\r\n              type='submit'\r\n              bg='brand.main'\r\n              borderColor='brand.subText'\r\n              w='full'\r\n              _hover='none'\r\n              isDisabled={!spinner}\r\n              color='brand.bgText'>\r\n              {spinner ? (\r\n                'Submit'\r\n              ) : (\r\n                <Spinner\r\n                  thickness='4px'\r\n                  speed='0.65s'\r\n                  emptyColor='gray.200'\r\n                  color='brand.main'\r\n                  size='md'\r\n                />\r\n              )}\r\n            </Button>\r\n            <Link\r\n              color='brand.main'\r\n              onClick={handleTestUser}\r\n              textDecor='underline'>\r\n              Login as Test User\r\n            </Link>\r\n\r\n            <Text color='red'>{fetchData.msg}</Text>\r\n            <Text color='green'>{fetchData.success}</Text>\r\n          </Box>\r\n        </Grid>\r\n      </form>\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useFetch from './customHooks/useFetch';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\r\nimport {\r\n  Box,\r\n  Center,\r\n  Flex,\r\n  Grid,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n} from '@chakra-ui/layout';\r\nimport { Spinner } from '@chakra-ui/react';\r\nimport { Button } from '@chakra-ui/button';\r\n\r\nimport { LinkIcon } from '@chakra-ui/icons';\r\nfunction Register() {\r\n  const [passwordErr, setPasswordErr] = useState();\r\n  const [formData, setFormData] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  const handleClick = () => {\r\n    if (show) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (e.target[2].value !== e.target[4].value) {\r\n      return setPasswordErr('Passwords must match');\r\n    }\r\n    const regData = {\r\n      name: e.target[0].value,\r\n      email: e.target[1].value,\r\n      password: e.target[2].value,\r\n      createdAt: new Date(),\r\n    };\r\n    setFormData(regData);\r\n  };\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    '/register',\r\n    'POST',\r\n    formData\r\n  );\r\n  if (fetchData.ok) {\r\n    window.location.href = '/';\r\n  }\r\n  if (fetchData.sucess) {\r\n    window.location.href = '/login';\r\n  }\r\n  return (\r\n    <Center bg='brand.bg' color='brand.text' maxH='90vh'>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid\r\n          // border=' 2px solid black'\r\n          gap={{ lg: '7', base: '10' }}\r\n          px={{ lg: '10', base: '5' }}\r\n          mt='32'\r\n          py='10'\r\n          // h='96'\r\n          boxShadow='2xl'\r\n          w={{ md: '2xl', base: 'sm' }}\r\n          flexDir='column'>\r\n          <Heading textAlign='center' color='brand.main'>\r\n            Register <LinkIcon />\r\n          </Heading>\r\n          <FormControl id='email' isRequired>\r\n            <FormLabel>Name</FormLabel>\r\n            <Input\r\n              w={{ base: '100%', lg: 'full' }}\r\n              name='name'\r\n              borderColor='brand.subText'\r\n              type='text'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              placeholder='Enter Name'\r\n              autoComplete='false'\r\n            />\r\n          </FormControl>\r\n          <FormControl id='email' isRequired>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              w={{ base: '100%', lg: 'full' }}\r\n              name='email'\r\n              borderColor='brand.subText'\r\n              type='email'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              placeholder='Enter Email'\r\n              autoComplete='false'\r\n            />\r\n          </FormControl>\r\n          <FormControl id='passoword' isRequired>\r\n            <FormLabel>Password</FormLabel>\r\n            <InputGroup size='md'>\r\n              <Input\r\n                w={{ base: '100%', lg: 'full' }}\r\n                pr='4.5rem'\r\n                minLength={10}\r\n                type={show ? 'text' : 'password'}\r\n                placeholder='Enter password'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                borderColor='brand.subText'\r\n              />\r\n              <InputRightElement width='4.5rem'>\r\n                <Button\r\n                  w={{ base: '100%', lg: 'full' }}\r\n                  h='1.75rem'\r\n                  size='sm'\r\n                  onClick={handleClick}\r\n                  color='brand.text'\r\n                  bg='transparent'\r\n                  _hover='none'\r\n                  _active='none'>\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </FormControl>\r\n          <FormControl id='passoword' isRequired>\r\n            <FormLabel>Confirm Password</FormLabel>\r\n            <InputGroup size='md'>\r\n              <Input\r\n                w={{ base: '100%', lg: 'full' }}\r\n                pr='4.5rem'\r\n                type={show ? 'text' : 'password'}\r\n                placeholder='Enter password'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                borderColor='brand.subText'\r\n              />\r\n              <InputRightElement width='4.5rem'>\r\n                <Button\r\n                  h='1.75rem'\r\n                  w={{ base: '100%', lg: 'full' }}\r\n                  size='sm'\r\n                  onClick={handleClick}\r\n                  color='brand.text'\r\n                  bg='transparent'\r\n                  _hover='none'\r\n                  _active='none'>\r\n                  {show ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </FormControl>\r\n          <Box w={{ base: '100%', lg: 'full' }}>\r\n            <Button\r\n              type='submit'\r\n              bg='brand.main'\r\n              borderColor='brand.subText'\r\n              w='full'\r\n              _hover='none'\r\n              color='brand.bgText'>\r\n              {spinner ? (\r\n                'Submit'\r\n              ) : (\r\n                <Spinner\r\n                  thickness='4px'\r\n                  speed='0.65s'\r\n                  emptyColor='gray.200'\r\n                  color='brand.main'\r\n                  size='md'\r\n                />\r\n              )}\r\n            </Button>\r\n            <Text\r\n              color='red'\r\n              opacity={fetchData.msg ? '1' : '0'}\r\n              transition='ease'\r\n              transitionDuration='0.4s'>\r\n              {fetchData.msg}\r\n            </Text>\r\n            <Text color='green'>{fetchData.success}</Text>\r\n            <Text color='crimson'>{fetchError.msg}</Text>\r\n            <Text color='crimson'>{passwordErr}</Text>\r\n          </Box>\r\n        </Grid>\r\n      </form>\r\n      {/* <form onSubmit={handleSubmit}>\r\n        <label>Name</label>\r\n        <input name='name' type='text' required />\r\n        <label>Email</label>\r\n        <input name='email' type='email' required />\r\n        <label>Pass</label>\r\n        <input name='password' type='password' required />\r\n        <label>Confirm Pass</label>\r\n        <input name='password' type='password' required />\r\n        <input type='submit' value='Submit' />\r\n      </form> */}\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { createContext } from 'react';\r\n\r\nexport const userLoginContext = createContext();\r\nexport const themeContext = createContext();\r\n","import React, { useEffect, useState } from 'react';\r\nimport jwt from 'jsonwebtoken';\r\nfunction useAuth() {\r\n  const [userLoggedIn, setUserLoggedIn] = useState();\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (user) {\r\n        setUserLoggedIn(user);\r\n      } else {\r\n        setUserLoggedIn(null);\r\n      }\r\n    }\r\n  }, []);\r\n  return { userLoggedIn };\r\n}\r\n\r\nexport default useAuth;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Input } from '@chakra-ui/input';\r\nimport { Box, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport { Button } from '@chakra-ui/button';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { Textarea } from '@chakra-ui/textarea';\r\nimport { CircularProgress, Image } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router';\r\nfunction CreateBlog({ data, user }) {\r\n  const [url, setUrl] = useState();\r\n  const [postBody, setPostBody] = useState();\r\n  const [uploadImg, setUploadImg] = useState();\r\n  const [spinner, setSpinner] = useState(true);\r\n  const [editor, setEditor] = useState();\r\n  const history = useHistory();\r\n  function previewFile() {\r\n    var preview = document.querySelector('#img');\r\n    var file = document.querySelector('input[type=file]').files[0];\r\n    var reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      preview.src = reader.result;\r\n      setUploadImg(reader.result);\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      preview.src = '';\r\n    }\r\n  }\r\n  const [publish, setPublish] = useState(false);\r\n  const handlePublish = () => {};\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (publish) {\r\n      const blogData = {\r\n        title: e.target[0].value,\r\n        body: e.target[1].value,\r\n        author: data.name,\r\n        authorID: user.id,\r\n        isPublished: true,\r\n        image: uploadImg ?? '',\r\n        authorImage: data.image,\r\n      };\r\n      setUrl('/');\r\n      setPostBody(blogData);\r\n      setSpinner(false);\r\n    } else {\r\n      const blogData = {\r\n        title: e.target[0].value,\r\n        body: e.target[1].value,\r\n        author: data.name,\r\n        authorID: user.id,\r\n        isPublished: false,\r\n        image: uploadImg ?? '',\r\n        authorImage: data.image,\r\n      };\r\n      setUrl('/');\r\n      setPostBody(blogData);\r\n      setSpinner(false);\r\n    }\r\n  };\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    url,\r\n    'POST',\r\n    postBody\r\n  );\r\n  useEffect(() => {\r\n    if (fetchData) {\r\n      window.location.href = '/';\r\n    }\r\n    fetchData && setSpinner(true);\r\n    fetchData && setPublish(null);\r\n  }, [fetchData]);\r\n  return (\r\n    <Box\r\n      w='96'\r\n      px={{ lg: '0', base: '2' }}\r\n      m={{ base: 'auto', lg: '0' }}\r\n      py={{ lg: '0', base: '2' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl>\r\n          <Heading color='brand.main'>Create Blog</Heading>\r\n          <Grid py='5' pb='2' w='full'>\r\n            <FormLabel>Title</FormLabel>\r\n            <Textarea\r\n              type='text'\r\n              placeholder='Title for your blog'\r\n              _placeholder={{ color: 'brand.text' }}\r\n              borderColor='brand.subText'\r\n              required\r\n            />\r\n            <Box py='2'>\r\n              <FormLabel>Body</FormLabel>\r\n              <Textarea\r\n                required\r\n                borderColor='brand.subText'\r\n                placeholder='Describe your Blog'\r\n                _placeholder={{ color: 'brand.text' }}\r\n                type='text'\r\n              />\r\n            </Box>\r\n            <FormLabel>Image</FormLabel>\r\n            <Input\r\n              type='file'\r\n              border='none'\r\n              p='0px'\r\n              m='0px'\r\n              onChange={previewFile}\r\n            />\r\n            <Image\r\n              w={{ lg: 'full', base: '96' }}\r\n              objectFit='cover'\r\n              src=''\r\n              alt=''\r\n              id='img'\r\n            />\r\n          </Grid>\r\n          <Flex justify='space-between'>\r\n            <Button\r\n              type='submit'\r\n              bg='brand.main'\r\n              borderColor='brand.subText'\r\n              onClick={() => {\r\n                setPublish(true);\r\n              }}\r\n              w='68%'\r\n              isDisabled={!spinner}\r\n              _hover='none'\r\n              color='brand.bgText'>\r\n              {spinner || !publish ? (\r\n                'Publish'\r\n              ) : (\r\n                <CircularProgress\r\n                  isIndeterminate\r\n                  color='brand.main'\r\n                  size='30px'\r\n                  thickness='12'\r\n                />\r\n              )}\r\n            </Button>\r\n            <Button\r\n              type='submit'\r\n              bg='twitter.600'\r\n              borderColor='brand.subText'\r\n              onClick={() => {\r\n                setPublish(false);\r\n                history.goBack();\r\n              }}\r\n              w='30%'\r\n              isDisabled={!spinner}\r\n              _hover='none'\r\n              color='brand.bgText'>\r\n              {spinner || publish ? (\r\n                'Save'\r\n              ) : (\r\n                <CircularProgress\r\n                  display={!publish}\r\n                  isIndeterminate\r\n                  color='twitter.600'\r\n                  size='30px'\r\n                  thickness='12'\r\n                />\r\n              )}\r\n            </Button>\r\n          </Flex>\r\n          {fetchData.success && <Text>{fetchData.success}</Text>}\r\n        </FormControl>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateBlog;\r\n","export default __webpack_public_path__ + \"static/media/question-mark-img.1287f47e.JPEG\";","import React, { useEffect, useState } from 'react';\r\nimport { Image } from '@chakra-ui/image';\r\nimport { Box, Flex, Grid, Heading, Text, Center } from '@chakra-ui/layout';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport { Button } from '@chakra-ui/button';\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Avatar,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { CircularProgress } from '@chakra-ui/react';\r\nfunction Comments({ user, blogID, comments }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [url, setUrl] = useState();\r\n  const [postBody, setPostBody] = useState();\r\n  const [comment, setComment] = useState(false);\r\n  const [commentData, setCommentData] = useState([]);\r\n  const [userDetail, setUserDetail] = useState();\r\n  const handleOpen = () => {\r\n    if (open) {\r\n      setOpen(false);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n    setComment(true);\r\n    setUrl('/blog/comment/' + blogID + '?_method=PUT');\r\n    setPostBody({\r\n      comment: document.querySelector('#form')[0].value,\r\n      createdAt: Date.now(),\r\n      user: user.id,\r\n      image: userDetail.image,\r\n      name: userDetail.name,\r\n    });\r\n    console.log(document.querySelector('#form')[0].value);\r\n  };\r\n  useEffect(() => {\r\n    fetch(`https://s5po6.sse.codesandbox.io/user/${user.id}`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setUserDetail(result);\r\n        console.log(comments);\r\n      })\r\n      .catch((err) => {});\r\n  }, []);\r\n  useEffect(() => {\r\n    fetch(`https://s5po6.sse.codesandbox.io/blog/comments/${blogID}`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setComment(false);\r\n        if (result.comments.length) {\r\n          setCommentData(result.comments);\r\n        }\r\n        document.querySelector('#form')[0].value = null;\r\n      })\r\n      .catch((err) => {});\r\n  }, [open, comment]);\r\n  const { fetchData, fetchError, fetchIsPending } = useFetch(\r\n    url,\r\n    'POST',\r\n    postBody\r\n  );\r\n  return (\r\n    <Box\r\n      transition='ease'\r\n      transitionDuration='0.3s'\r\n      display={userDetail ? 'block' : 'none'}>\r\n      <Center py='3' boxShadow='lg' dropShadow='2xl'>\r\n        <Button\r\n          onClick={handleOpen}\r\n          rounded='2xl'\r\n          bg='brand.bg'\r\n          color='brand.text'\r\n          _hover={{ bg: 'whiteAlpha.300' }}>\r\n          Comments\r\n          {!open ? <ChevronDownIcon mx='1' /> : <ChevronUpIcon mx='1' />}\r\n        </Button>\r\n      </Center>\r\n      <Box display={open ? 'content' : 'none'}>\r\n        <Box\r\n          overflowY='auto'\r\n          maxH='250px'\r\n          // h={open ? 'full' : '20'}\r\n          transition='ease'\r\n          opacity='0.9'\r\n          transitionDuration='0.3s'>\r\n          {(commentData && comments) || comments.length ? (\r\n            commentData.map((comment) => (\r\n              <Flex px='5' py='3' key={comment.createdAt}>\r\n                <Avatar\r\n                  src={comment.image}\r\n                  mr='4'\r\n                  _hover={{ cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    window.location.href = `/profile/${comment.user}`;\r\n                  }}\r\n                />\r\n                <Flex flexDir='column'>\r\n                  <Heading fontSize='md'>\r\n                    {comment.name}{' '}\r\n                    <span>\r\n                      &#8226;\r\n                      <Text\r\n                        fontWeight='normal'\r\n                        fontSize='sm'\r\n                        color='brand.subText'\r\n                        display='inline-block'\r\n                        px='1'>\r\n                        {formatDistanceToNow(comment.createdAt, {\r\n                          addSuffix: true,\r\n                        })}\r\n                      </Text>\r\n                    </span>{' '}\r\n                  </Heading>\r\n\r\n                  <Text\r\n                    mt='1'\r\n                    color='brand.text'\r\n                    opacity='0.7'\r\n                    w='full'\r\n                    overflowWrap='anywhere'>\r\n                    {comment.comment}\r\n                  </Text>\r\n                </Flex>\r\n              </Flex>\r\n            ))\r\n          ) : (\r\n            <Center my='5'>\r\n              <Text fontWeight='bold'>Hold on!</Text>\r\n              <Text mx='2'>Getting comments...</Text>\r\n              <CircularProgress size='6' isIndeterminate color='brand.main' />\r\n            </Center>\r\n          )}\r\n        </Box>\r\n        {open && (\r\n          <form onSubmit={handleComment} id='form'>\r\n            <Center\r\n              px='3'\r\n              py='3'\r\n              borderTop='1px'\r\n              borderTopRadius='10'\r\n              borderColor='blackAlpha.200'>\r\n              <Avatar src={userDetail.image} />\r\n              <Input\r\n                mx='4'\r\n                borderColor='brand.subText'\r\n                placeholder='Comment something...'\r\n                border='1px'\r\n                borderColor='brand.subText'\r\n                _placeholder={{ color: 'brand.subText' }}\r\n              />\r\n\r\n              <Button\r\n                bg='brand.main'\r\n                _hover='none'\r\n                _active='none'\r\n                isDisabled={comment}\r\n                color='white'\r\n                w='32'\r\n                type='submit'>\r\n                {!comment ? (\r\n                  <Text>Submit</Text>\r\n                ) : (\r\n                  <Center>\r\n                    <CircularProgress\r\n                      size='6'\r\n                      isIndeterminate\r\n                      color='brand.main'\r\n                    />\r\n                  </Center>\r\n                )}\r\n              </Button>\r\n            </Center>\r\n          </form>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Image } from '@chakra-ui/image';\r\nimport { Box, Center, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Menu, MenuButton, MenuList, MenuItem, Avatar } from '@chakra-ui/react';\r\nimport {\r\n  ExternalLinkIcon,\r\n  EditIcon,\r\n  ViewIcon,\r\n  DeleteIcon,\r\n} from '@chakra-ui/icons';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport noImage from '../assets/images/question-mark-img.JPEG';\r\nimport Comments from './Comments';\r\nfunction Blog({ blog, user, profile }) {\r\n  const [blogImageFit, setBlogImageFit] = useState(true);\r\n  const [userExists, setUserExits] = useState(false);\r\n  const [publisher, setPublisher] = useState(false);\r\n  const [publishBlog, setPublishBlog] = useState(true);\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (blog.authorID === user.id) {\r\n        setUserExits(true);\r\n        if (!blog.isPublished) {\r\n          setPublisher(true);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const handleUnpublish = () => {\r\n    let confirm = window.confirm(\r\n      'Unpublishing will delete all comments from your blogs. Do you want to continue?'\r\n    );\r\n    if (confirm) {\r\n      setPublishBlog(false);\r\n      fetch(\r\n        `https://s5po6.sse.codesandbox.io/blog/publish/${blog._id}?_method=PUT`,\r\n        {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          cache: 'no-cache',\r\n          credentials: 'same-origin',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ isPublished: false }),\r\n        }\r\n      )\r\n        .then((res) => {\r\n          window.location.href = '/profile/' + blog.authorID;\r\n          return res.json();\r\n        })\r\n        .catch((err) => {});\r\n    }\r\n  };\r\n  const handleblogImageFit = () => {\r\n    if (blogImageFit) {\r\n      setBlogImageFit(false);\r\n    } else {\r\n      setBlogImageFit(true);\r\n    }\r\n  };\r\n  const [url, setUrl] = useState();\r\n  const [postbody, setPostbody] = useState();\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [readFullExpand, setReadFullExpand] = useState(3);\r\n  const handlefullBody = () => {\r\n    if (readFullExpand == 3) {\r\n      setReadFullExpand(null);\r\n    } else {\r\n      setReadFullExpand(3);\r\n    }\r\n  };\r\n  const handleDelete = () => {\r\n    setUrl('/blog/' + blog._id + '?_method=DELETE');\r\n    setPostbody({ blogID: blog._id });\r\n    setDeleted(true);\r\n  };\r\n\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(\r\n    url,\r\n    'POST',\r\n    postbody\r\n  );\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        display={!deleted ? 'flex' : 'none'}\r\n        key={blog._id}\r\n        w={{ lg: '20', base: 'full' }}\r\n        py='6'\r\n        transition='ease'\r\n        borderRadius='10'\r\n        transitionDuration='0.3s'>\r\n        <Flex flexDir='column' px={{ lg: '5', base: '1' }} pt='10'>\r\n          <Box\r\n            display={{ base: 'none', lg: 'contents' }}\r\n            _hover={{ opacity: '0.8', cursor: 'pointer' }}\r\n            onMouseOver={() => {}}>\r\n            {!profile && (\r\n              <Avatar\r\n                size='md'\r\n                onClick={() =>\r\n                  (window.location.href = '/profile/' + blog.authorID)\r\n                }\r\n                src={blog.authorImage}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Flex>\r\n        <Box>\r\n          <Text\r\n            color='brand.subText'\r\n            py='2'\r\n            w='max'\r\n            transition='ease'\r\n            transitionDuration='0.3s'\r\n            _hover={{\r\n              color: 'brand.text',\r\n              cursor: 'pointer',\r\n            }}>\r\n            Published{' '}\r\n            {formatDistanceToNow(new Date(blog.updatedAt), {\r\n              addSuffix: true,\r\n            })}\r\n          </Text>\r\n          <Flex\r\n            flexDir='column'\r\n            boxShadow='lg'\r\n            borderRadius='10'\r\n            m='auto'\r\n            w={{ lg: 'full', base: '370px' }}>\r\n            <Box pos='relative'>\r\n              <Image\r\n                transition='ease'\r\n                transitionDuration='0.3s'\r\n                _hover={{ opacity: '0.8', cursor: 'pointer' }}\r\n                src={blog.image ? blog.image : noImage}\r\n                h={blogImageFit ? '200px' : '500px'}\r\n                onClickCapture={handleblogImageFit}\r\n                objectFit={blogImageFit ? 'cover' : 'cover'}\r\n                minW={{ lg: '90vh', base: 'full' }}\r\n                // w={{ lg: '96', base: 'full' }}\r\n                borderTopRadius='10'\r\n              />\r\n              <Menu autoSelect={false}>\r\n                <MenuButton\r\n                  pos='absolute'\r\n                  top='5px'\r\n                  right='5px'\r\n                  _hover={{\r\n                    outline: 'none',\r\n                  }}\r\n                  _active={{\r\n                    outline: '1px solid black',\r\n                    outlineColor: 'brand.bg',\r\n                  }}\r\n                  as={Button}\r\n                  px='4'\r\n                  borderRadius='10'\r\n                  bg='whiteAlpha.500'\r\n                  color='blackAlpha.800'>\r\n                  &#8226;&#8226;&#8226;\r\n                </MenuButton>\r\n                <MenuList\r\n                  bg='brand.bg'\r\n                  color='brand.text'\r\n                  border='2px solid black'\r\n                  borderColor='#a3a3a3'>\r\n                  {/* {userExists ? ( */}\r\n                  <MenuItem\r\n                    onClick={() =>\r\n                      (window.location.href = '/profile/' + blog.authorID)\r\n                    }\r\n                    _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                    _active='none'\r\n                    bg='transparent'\r\n                    color='brand.text'>\r\n                    <ExternalLinkIcon mr='2' /> Profile\r\n                  </MenuItem>\r\n                  {/* ) : ( */}\r\n                  {/* <MenuItem\r\n                    onClick={() => alert('Please login to view profile')}\r\n                    _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                    _active='none'\r\n                    bg='transparent'\r\n                    color='brand.text'>\r\n                    <ExternalLinkIcon mr='2' /> Profile\r\n                  </MenuItem>\r\n                )} */}\r\n\r\n                  {userExists ? (\r\n                    <MenuItem\r\n                      onClick={handleUnpublish}\r\n                      _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                      _active='none'\r\n                      bg='transparent'\r\n                      color='brand.text'>\r\n                      <EditIcon mr='2' /> Un-Publish\r\n                    </MenuItem>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {userExists ? (\r\n                    <MenuItem\r\n                      onClick={handleDelete}\r\n                      _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                      _active='none'\r\n                      bg='transparent'\r\n                      color='brand.text'>\r\n                      <DeleteIcon mr='2' /> Delete\r\n                    </MenuItem>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </MenuList>\r\n              </Menu>\r\n            </Box>\r\n            <Grid flexDir='column' gap='6' p='5'>\r\n              <Heading\r\n                color='brand.main'\r\n                w='100%'\r\n                overflowWrap='break-word'\r\n                transition='ease'\r\n                transitionDuration='0.3s'\r\n                _hover={{\r\n                  // color: 'brand.text',\r\n                  cursor: 'pointer',\r\n                  opacity: '0.9',\r\n                }}>\r\n                {blog.title}\r\n              </Heading>\r\n              {user ? (\r\n                <Text fontWeight='bold' fontSize='lg' opacity='0.7'>\r\n                  {' '}\r\n                  {blog.author}\r\n                </Text>\r\n              ) : (\r\n                <Text fontWeight='bold' fontSize='lg' opacity='0.7'>\r\n                  Anonymous\r\n                </Text>\r\n              )}\r\n\r\n              <Text\r\n                noOfLines={readFullExpand}\r\n                transitionDuration='0.3s'\r\n                transition='ease'\r\n                textOverflow='ellipsis'>\r\n                {blog.body}\r\n              </Text>\r\n              <Flex justify='flex-start'>\r\n                <Button variant='link' onClick={handlefullBody}>\r\n                  {readFullExpand ? 'Read more' : 'Read Less'}\r\n                </Button>\r\n              </Flex>\r\n              {/* <Flex>\r\n              <Flex>\r\n                <Image\r\n                  src={!liked ? unlikeButton : likeButton}\r\n                  color='brand.text'\r\n                  cursor='pointer'\r\n                  onClick={handleLike}\r\n                />\r\n                <Text px='1' fontWeight='bold'>\r\n                  {fakeLike}\r\n                </Text>\r\n              </Flex>\r\n            </Flex> */}\r\n            </Grid>\r\n            {user && (\r\n              <Comments\r\n                user={user}\r\n                blogID={blog._id}\r\n                comments={blog.comments}\r\n              />\r\n            )}\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { Box, Center, Flex, Grid, Heading, Text } from '@chakra-ui/layout';\r\nimport { Image } from '@chakra-ui/image';\r\nimport Blog from './Blog';\r\nimport jwt from 'jsonwebtoken';\r\nimport { CircularProgress, Progress } from '@chakra-ui/react';\r\n\r\nfunction Blogs() {\r\n  const [url, setUrl] = useState();\r\n  const [fetchData, setFetchData] = useState();\r\n  const [user, setUser] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n      }\r\n    }\r\n  }, []);\r\n  function getData() {\r\n    fetch(`https://s5po6.sse.codesandbox.io/blogs`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setFetchData(result);\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n  return (\r\n    <Box w={{ lg: '65%', base: '100%' }}>\r\n      {fetchData ? (\r\n        fetchData.blogs.map(\r\n          (blog) => blog.isPublished && <Blog blog={blog} user={user} />\r\n        )\r\n      ) : (\r\n        <Center pt={{ base: '32', lg: '44' }} w='90%' m='auto'>\r\n          <Heading\r\n            fontSize={{ base: '2xl', lg: '2.3em' }}\r\n            opacity='0.7'\r\n            pr={{ base: '3', lg: '7' }}>\r\n            Getting Blogs\r\n          </Heading>\r\n          <CircularProgress\r\n            isIndeterminate\r\n            size={{ base: '40px', lg: '60px' }}\r\n            color='brand.main'\r\n          />\r\n        </Center>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Blogs;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { userLoginContext } from '../contexts/context';\r\nimport useAuth from '../customHooks/useAuth';\r\nimport jwt from 'jsonwebtoken';\r\nimport {\r\n  Box,\r\n  Center,\r\n  Divider,\r\n  Flex,\r\n  Grid,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  Wrap,\r\n} from '@chakra-ui/layout';\r\nimport CreateBlog from './CreateBlog';\r\nimport Blogs from './Blogs';\r\nimport { Button } from '@chakra-ui/button';\r\n\r\nfunction Dashboard() {\r\n  const [url, setUrl] = useState();\r\n  const [userData, setUserData] = useState();\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (user) {\r\n        setUrl(`user/${user.id}`);\r\n        setUserData(user);\r\n      } else {\r\n      }\r\n    }\r\n  }, []);\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(url, 'GET');\r\n  console.log(!fetchIsPending && fetchData);\r\n\r\n  return (\r\n    <Box bg='brand.bg' minH='100vh' color='brand.text'>\r\n      <Heading\r\n        textAlign='center'\r\n        pt='20'\r\n        color='brand.main'\r\n        textDecor='underline'>\r\n        Overland Blogs\r\n      </Heading>\r\n      <Flex\r\n        flexDir={{ base: 'column-reverse', lg: 'row' }}\r\n        justify='space-between'\r\n        px={{ lg: '10', base: '1' }}\r\n        w={{ lg: 'container.xl', base: '' }}\r\n        m='auto'\r\n        py={{ lg: '16', base: '10' }}>\r\n        <Blogs />\r\n        {userData ? (\r\n          <CreateBlog data={fetchData} user={userData} />\r\n        ) : (\r\n          <Box\r\n            textAlign='left'\r\n            w={{ lg: '96', base: 'full' }}\r\n            px={{ base: '5', lg: '0' }}>\r\n            <Heading color='brand.main'>Welcome to Overland Blogs</Heading>\r\n            <Text color='brand.subText' py='2'>\r\n              Please Login To Create Blog! Also, Enjoy dark mode :)\r\n            </Text>\r\n            <Link href='/login'>\r\n              <Button\r\n                w='full'\r\n                mt='6'\r\n                _hover='none'\r\n                _active='none'\r\n                h='12'\r\n                bg='brand.main'\r\n                color='brand.bgText'>\r\n                Login\r\n              </Button>\r\n            </Link>\r\n            <Flex alignItems='center' my='3'>\r\n              <Divider />{' '}\r\n              <Text px='5' color='brand.subText'>\r\n                OR\r\n              </Text>{' '}\r\n              <Divider />\r\n            </Flex>\r\n            <Link href='/register'>\r\n              <Button\r\n                w='full'\r\n                _hover='none'\r\n                _active='none'\r\n                h='12'\r\n                color='white'\r\n                bg='twitter.700'>\r\n                Register\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n        )}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { Button } from '@chakra-ui/button';\r\nimport { Box } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction NavNotLoggedIn() {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <Box>\r\n        <Button\r\n          onClick={() => {\r\n            history.push('/login');\r\n          }}\r\n          variant='ghost'\r\n          color='brand.bgText'\r\n          _hover='none'\r\n          _active='none'>\r\n          Login\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            history.push('/register');\r\n          }}\r\n          variant='ghost'\r\n          color='brand.bgText'\r\n          _hover='none'\r\n          _active='none'>\r\n          Signup\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavNotLoggedIn;\r\n","export default __webpack_public_path__ + \"static/media/logout.c99a6b9d.svg\";","export default __webpack_public_path__ + \"static/media/profile.a296afc6.svg\";","import { Button } from '@chakra-ui/button';\r\nimport { Box, Center, Flex, Grid, Text } from '@chakra-ui/layout';\r\nimport { Switch } from '@chakra-ui/switch';\r\nimport React, { useState } from 'react';\r\nimport { Avatar } from '@chakra-ui/avatar';\r\nimport { Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/menu';\r\nimport { Portal } from '@chakra-ui/portal';\r\nimport { ChevronDownIcon, ExternalLinkIcon } from '@chakra-ui/icons';\r\nimport { Image } from '@chakra-ui/image';\r\nimport LogoutIcon from '../assets/images/logout.svg';\r\nimport ProfileIcon from '../assets/images/profile.svg';\r\n\r\nimport useAuth from '../customHooks/useAuth';\r\nfunction NavLoggedIn({ fetchData, fetchIsPending, handleTheme }) {\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    window.location.href = '/';\r\n  };\r\n  const { userLoggedIn } = useAuth();\r\n\r\n  console.log(fetchData);\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Center>\r\n      <Menu>\r\n        <MenuButton>\r\n          <Flex\r\n            p='1'\r\n            borderRadius='20'\r\n            alignItems='center'\r\n            _hover={{ borderColor: 'red' }}>\r\n            <Avatar size='sm' src={!fetchIsPending && fetchData.image}></Avatar>\r\n            {/* <ChevronDownIcon fontSize='xl' color='white' mx='1' /> */}\r\n          </Flex>\r\n        </MenuButton>\r\n        <Portal>\r\n          <MenuList bg='brand.bg' color='brand.subText'>\r\n            <Image\r\n              size='sm'\r\n              w='full'\r\n              h='24'\r\n              objectFit='cover'\r\n              src={!fetchIsPending && fetchData.image}></Image>{' '}\r\n            <Text\r\n              color='brand.bgText'\r\n              fontWeight='bold'\r\n              fontSize='1.2em'\r\n              p='3'\r\n              bg='brand.main'>\r\n              Welcome back, {!fetchIsPending && fetchData.name}\r\n            </Text>\r\n            <MenuItem\r\n              onClick={() =>\r\n                (window.location.href = '/profile/' + userLoggedIn.id)\r\n              }\r\n              _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n              _active='none'\r\n              py='2'\r\n              bg='transparent'\r\n              color='brand.text'>\r\n              <Image src={ProfileIcon} mr='2'></Image>\r\n              Profile\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={handleLogout}\r\n              _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n              _active='none'\r\n              py='2'\r\n              bg='transparent'\r\n              color='brand.text'>\r\n              <Center>\r\n                <Image src={LogoutIcon} mr='2'></Image>\r\n                Logout\r\n              </Center>\r\n            </MenuItem>\r\n            <MenuItem\r\n              _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n              _active='none'\r\n              py='2'\r\n              bg='transparent'\r\n              color='brand.text'>\r\n              <Center justifyContent='space-between'>\r\n                <Text>Dark Mode</Text>\r\n                <Switch\r\n                  ml='28'\r\n                  value='dark'\r\n                  id='email-alerts'\r\n                  colorScheme='gray'\r\n                  size='md'\r\n                  onChange={handleTheme}\r\n                />\r\n              </Center>\r\n            </MenuItem>\r\n          </MenuList>\r\n        </Portal>\r\n      </Menu>\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default NavLoggedIn;\r\n","import React from 'react';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Box, Center, Flex, Heading, Text } from '@chakra-ui/layout';\r\nimport { Switch } from '@chakra-ui/switch';\r\nimport { themeContext } from '../contexts/context';\r\nimport { useContext } from 'react';\r\nimport useAuth from '../customHooks/useAuth';\r\nimport useFetch from '../customHooks/useFetch';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from '@chakra-ui/react';\r\nimport NavNotLoggedIn from './NavNotLoggedIn';\r\nimport NavLoggedIn from './NavLoggedIn';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Nav() {\r\n  const history = useHistory();\r\n  const [url, setUrl] = useState(null);\r\n  const { currentTheme, setCurrentTheme } = useContext(themeContext);\r\n  const { userLoggedIn } = useAuth();\r\n\r\n  const handleTheme = () => {\r\n    if (currentTheme) {\r\n      setCurrentTheme(false);\r\n    } else {\r\n      setCurrentTheme(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    localStorage.removeItem('theme');\r\n    localStorage.setItem('theme', currentTheme);\r\n  }, [currentTheme]);\r\n  useEffect(() => {\r\n    if (userLoggedIn) {\r\n      setUrl('user/' + userLoggedIn.id);\r\n    }\r\n  }, [userLoggedIn]);\r\n  const { fetchData, fetchIsPending, fetchError } = useFetch(url, 'GET');\r\n  return (\r\n    <Flex\r\n      pos='fixed'\r\n      w='100%'\r\n      zIndex='999'\r\n      justify='space-between'\r\n      h='7vh'\r\n      alignItems='center'\r\n      px='4'\r\n      bgColor='brand.main'>\r\n      <Box>\r\n        <Heading size='lg' color='brand.bgText'>\r\n          <Link\r\n            onClick={() => {\r\n              history.push('/');\r\n            }}\r\n            _hover='none'>\r\n            Overland Blogs\r\n          </Link>\r\n        </Heading>\r\n      </Box>\r\n      {!userLoggedIn ? (\r\n        <Center>\r\n          <NavNotLoggedIn />\r\n        </Center>\r\n      ) : (\r\n        <Center>\r\n          <NavLoggedIn\r\n            fetchData={fetchData}\r\n            fetchIsPending={fetchIsPending}\r\n            handleTheme={handleTheme}\r\n          />\r\n        </Center>\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from 'react';\r\nimport { Box, Center, Flex, Heading, Text } from '@chakra-ui/layout';\r\nimport { Image } from '@chakra-ui/image';\r\nimport noImage from '../assets/images/question-mark-img.JPEG';\r\nimport { Menu, MenuButton, MenuList, MenuItem, Avatar } from '@chakra-ui/react';\r\nimport {\r\n  ExternalLinkIcon,\r\n  EditIcon,\r\n  ViewIcon,\r\n  DeleteIcon,\r\n} from '@chakra-ui/icons';\r\n\r\nimport { Button } from '@chakra-ui/button';\r\nimport { useHistory } from 'react-router';\r\nfunction UnPublishedBlogs({ blogs }) {\r\n  console.log('Unpublished');\r\n  console.log(blogs);\r\n  const history = useHistory();\r\n\r\n  const [published, setPublished] = useState(false);\r\n  const handlePublished = (e) => {\r\n    setPublished(true);\r\n\r\n    fetch(`https://s5po6.sse.codesandbox.io/blog/publish/${e}?_method=PUT`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ isPublished: true, createdAt: Date.now() }),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((e) => {\r\n        alert('Blog Published!');\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n  };\r\n  const [deleted, setDeleted] = useState(false);\r\n  const handleEdit = (e) => {\r\n    // alert(e._id);\r\n    window.location.href = `/edit/${e._id}`;\r\n  };\r\n  const handleDelete = (e) => {\r\n    fetch(`https://s5po6.sse.codesandbox.io/blog/${e}?_method=DELETE`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        window.location.reload();\r\n        // window.location.href = '/';\r\n      })\r\n      .catch((err) => {\r\n        alert('Some error occured, blog was not deleted.');\r\n      });\r\n    setDeleted(true);\r\n  };\r\n  return (\r\n    <Box>\r\n      {blogs && blogs.length && (\r\n        <Box py='10' bg='brand.bg' color='brand.text' px='10'>\r\n          <Heading\r\n            py='5'\r\n            textAlign='center'\r\n            textDecor='underline'\r\n            opacity='0.7'>\r\n            Un-Published Blogs\r\n          </Heading>\r\n          <span>\r\n            <Text\r\n              textAlign='center'\r\n              opacity='0.7'\r\n              fontSize='sm'\r\n              textDecor='none'>\r\n              (Refresh to see changes)\r\n            </Text>\r\n          </span>\r\n          <Flex overflow='auto' py='10'>\r\n            {blogs &&\r\n              blogs.map((blog) => (\r\n                <Box mx='5'>\r\n                  <Text opacity='0.7'>Un-Published</Text>\r\n                  <Box\r\n                    w='370px'\r\n                    minW='370px'\r\n                    bg='brand.bg'\r\n                    boxShadow='2xl'\r\n                    borderRadius='12'\r\n                    color='brand.text'>\r\n                    <Box pos='relative'>\r\n                      <Image\r\n                        borderRadius='10'\r\n                        h='270px'\r\n                        shadow='xl'\r\n                        objectFit='cover'\r\n                        w='full'\r\n                        src={blog.image ? blog.image : noImage}></Image>\r\n                      <Menu autoSelect={false}>\r\n                        <MenuButton\r\n                          pos='absolute'\r\n                          top='10px'\r\n                          right='5px'\r\n                          _hover={{\r\n                            outline: 'none',\r\n                          }}\r\n                          _active={{\r\n                            outline: '1px solid black',\r\n                            outlineColor: 'brand.bg',\r\n                          }}\r\n                          as={Button}\r\n                          px='4'\r\n                          borderRadius='10'\r\n                          bg='whiteAlpha.500'\r\n                          color='blackAlpha.800'>\r\n                          &#8226;&#8226;&#8226;\r\n                        </MenuButton>\r\n                        <MenuList\r\n                          bg='brand.bg'\r\n                          color='brand.text'\r\n                          border='2px solid black'\r\n                          borderColor='#a3a3a3'>\r\n                          {/* {userExists ? ( */}\r\n                          <MenuItem\r\n                            _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                            _active='none'\r\n                            bg='transparent'\r\n                            onClick={(e) => handlePublished(blog._id)}\r\n                            color='brand.text'>\r\n                            <ExternalLinkIcon mr='2' /> Publish\r\n                          </MenuItem>\r\n\r\n                          <MenuItem\r\n                            _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                            _active='none'\r\n                            bg='transparent'\r\n                            onClick={() => handleEdit(blog)}\r\n                            color='brand.text'>\r\n                            <EditIcon mr='2' /> Edit\r\n                          </MenuItem>\r\n\r\n                          <MenuItem\r\n                            _hover={{ bgColor: 'brand.main', color: 'white' }}\r\n                            _active='none'\r\n                            bg='transparent'\r\n                            onClick={(e) => handleDelete(blog._id)}\r\n                            color='brand.text'>\r\n                            <DeleteIcon mr='2' /> Delete\r\n                          </MenuItem>\r\n                        </MenuList>\r\n                      </Menu>\r\n                    </Box>\r\n                    <Box p='5'>\r\n                      <Heading pb='2' opacity='0.7'>\r\n                        {blog.title}\r\n                      </Heading>\r\n                      <Text noOfLines={1}>{blog.body}</Text>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UnPublishedBlogs;\r\n","import React from 'react';\r\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\r\nimport {\r\n  Box,\r\n  Center,\r\n  Flex,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Text,\r\n} from '@chakra-ui/layout';\r\nimport { Avatar } from '@chakra-ui/avatar';\r\nimport useFetch from './customHooks/useFetch';\r\nimport useAuth from './customHooks/useAuth';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\nimport Blog from './Dashboard/Blog';\r\nimport { Progress } from '@chakra-ui/progress';\r\nimport jwt from 'jsonwebtoken';\r\nimport UnPublishedBlogs from './Dashboard/UnPublishedBlogs';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Profile(props) {\r\n  const [url, setUrl] = useState(null);\r\n  const [noBlogs, setNoBlogs] = useState();\r\n  const [userInfo, setUserInfo] = useState();\r\n  const [userLoggedIn, setUserLoggedIn] = useState();\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (user) {\r\n        if (!user == undefined) {\r\n          setUserLoggedIn(user);\r\n        } else {\r\n          setUserLoggedIn({});\r\n        }\r\n      } else {\r\n        setUserLoggedIn({});\r\n      }\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    // if (userLoggedIn) {\r\n    setNoBlogs(false);\r\n    fetch('https://s5po6.sse.codesandbox.io/profile/' + props.match.params.id)\r\n      .then((result) => {\r\n        return result.json();\r\n      })\r\n      .then((user) => {\r\n        console.log(user);\r\n        if (user !== null || undefined) {\r\n          setUserInfo(user);\r\n        } else {\r\n          setUserInfo(null);\r\n        }\r\n\r\n        if (user.blogs.length) {\r\n          setNoBlogs(false);\r\n          const ublog = user.blogs.filter((blog) => blog.isPublished === false);\r\n          setPublisher(ublog);\r\n        } else {\r\n          setNoBlogs(true);\r\n        }\r\n      });\r\n    // }\r\n  }, []);\r\n  const [publisher, setPublisher] = useState();\r\n  return (\r\n    <Box minH='100vh'>\r\n      <Center\r\n        pt='12'\r\n        px={{ lg: '96' }}\r\n        justifyContent='space-evenly'\r\n        background='brand.gray'\r\n        boxShadow='lg'\r\n        h='72'>\r\n        <Box>\r\n          <Heading\r\n            color='brand.text'\r\n            fontFamily='fantasy'\r\n            opacity='0.8'\r\n            textDecor='underline'>\r\n            {userInfo && userInfo.user.name}\r\n          </Heading>\r\n          {userInfo && (\r\n            <Text\r\n              overflowWrap='anywhere'\r\n              w={{ base: '52', lg: '48' }}\r\n              color='brand.text'\r\n              opacity='0.5'>\r\n              Overlander for{' '}\r\n              {userInfo.user.createdAt\r\n                ? formatDistanceToNow(new Date(userInfo.user.createdAt))\r\n                : 'No Info :('}\r\n            </Text>\r\n          )}\r\n          <Text pt='5' fontWeight='bold' color='brand.text' opacity='0.5'>\r\n            Blogs Published:{' '}\r\n            {(publisher &&\r\n              userInfo &&\r\n              userInfo.blogs.length - publisher.length) ||\r\n              'None'}{' '}\r\n          </Text>\r\n          {userLoggedIn !== undefined &&\r\n            publisher &&\r\n            userLoggedIn.id !== props.match.params.id && (\r\n              <Text fontWeight='bold' color='brand.text' opacity='0.5'>\r\n                Un-Published: {(publisher && publisher.length) || 'None'}\r\n              </Text>\r\n            )}\r\n        </Box>\r\n        <Avatar\r\n          src={userInfo && userInfo.user.image}\r\n          size={{ lg: '20vh', base: '14vh' }}\r\n          size='2xl'\r\n        />\r\n      </Center>\r\n      {userLoggedIn !== undefined &&\r\n        publisher &&\r\n        userLoggedIn.id !== props.match.params.id && (\r\n          <Box>\r\n            <UnPublishedBlogs blogs={publisher} />\r\n          </Box>\r\n        )}\r\n      {userInfo ? (\r\n        <Box>\r\n          {userInfo.blogs.length && (\r\n            <Heading\r\n              textAlign='center'\r\n              py='10'\r\n              textDecor='underline'\r\n              bg='brand.bg'\r\n              color='brand.text'>\r\n              <Text opacity='0.7'>Published Blogs</Text>\r\n            </Heading>\r\n          )}\r\n\r\n          <Grid\r\n            // pr='5'\r\n            bg='brand.bg'\r\n            color='brand.text'\r\n            templateColumns={{ lg: 'repeat(2, 1fr)', base: '1' }}>\r\n            {userInfo &&\r\n              userInfo.blogs.map(\r\n                (blog) =>\r\n                  blog.isPublished && (\r\n                    <Blog\r\n                      blog={blog}\r\n                      user={userLoggedIn}\r\n                      profile={true}\r\n                      comments={blog.comments}\r\n                    />\r\n                  )\r\n              )}\r\n          </Grid>\r\n        </Box>\r\n      ) : (\r\n        <Box>\r\n          <Progress\r\n            isIndeterminate\r\n            size='xs'\r\n            colorScheme='green'\r\n            rounded='sm'\r\n          />\r\n          <Heading textAlign='center' opacity='0.7' pt='48'>\r\n            Getting blogs...\r\n          </Heading>\r\n        </Box>\r\n      )}\r\n\r\n      {noBlogs && (\r\n        <Box>\r\n          <Heading textAlign='center' opacity='0.7' pt='10'>\r\n            No Blogs to show\r\n          </Heading>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Center, Heading, Text } from '@chakra-ui/layout';\r\nimport useFetch from './customHooks/useFetch';\r\nimport { Input } from '@chakra-ui/input';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Image } from '@chakra-ui/image';\r\nimport noImage from './assets/images/question-mark-img.JPEG';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Edit(props) {\r\n  let history = useHistory();\r\n\r\n  const id = props.match.params.id;\r\n  //   const { fetchData, fetchError, fetchIsPending } = useFetch(\r\n  //     `/blog/edit/${id}`,\r\n  //     'GET'\r\n  //   );\r\n  const [fetchData, setFetchData] = useState();\r\n  const [updatePending, setUpdatePending] = useState(false);\r\n  useEffect(() => {\r\n    fetch(`https://s5po6.sse.codesandbox.io/blog/edit/${id}`)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        setFetchData(result);\r\n      })\r\n      .catch((err) => {});\r\n  }, [id]);\r\n  const [uploadImg, setUploadImg] = useState();\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const body = {\r\n      title: e.target[0].value,\r\n      body: e.target[1].value,\r\n      image: uploadImg ?? fetchData.blog.image,\r\n    };\r\n    setUpdatePending(true);\r\n\r\n    fetch(`https://s5po6.sse.codesandbox.io/blog/edit/${id}?_method=PUT`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        setUpdatePending(false);\r\n        history.goBack();\r\n        // window.location.href = '/';\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n  const handleImageUpload = (e) => {\r\n    e.preventDefault();\r\n    let preview = document.querySelector('#img');\r\n    let file = e.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      preview.src = reader.result;\r\n      setUploadImg(reader.result);\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      preview.src = '';\r\n    }\r\n  };\r\n  return (\r\n    <Box bg='brand.bg' color='brand.text' minH='100vh'>\r\n      <Box pt='20' w='70vh' m='auto'>\r\n        <Heading textAlign='center'>Edit</Heading>\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <Center flexDir='column'>\r\n            <FormControl id='title' isRequired pt='5'>\r\n              <FormLabel>Title</FormLabel>\r\n              <Input\r\n                name='title'\r\n                borderColor='brand.subText'\r\n                type='text'\r\n                defaultValue={fetchData && fetchData.blog.title}\r\n                _placeholder={{ color: 'brand.text' }}\r\n                placeholder='Enter Email'></Input>\r\n            </FormControl>\r\n            <FormControl id='body' isRequired py='3'>\r\n              <FormLabel>Body</FormLabel>\r\n              <Input\r\n                name='body'\r\n                borderColor='brand.subText'\r\n                type='text'\r\n                defaultValue={fetchData && fetchData.blog.body}\r\n                _placeholder={{ color: 'brand.text' }}\r\n                placeholder='Enter Title'\r\n              />\r\n            </FormControl>\r\n            <FormControl id='image'>\r\n              <FormLabel>Image</FormLabel>\r\n\r\n              <Text py='3'>\r\n                {fetchData && fetchData.blog.image\r\n                  ? 'Select Another?'\r\n                  : 'You have no image uploaded yet... Upload One'}\r\n              </Text>\r\n              <input type='file' onChange={(e) => handleImageUpload(e)}></input>\r\n              {fetchData && fetchData.blog.image ? (\r\n                <Image\r\n                  w='full'\r\n                  h='300px'\r\n                  pt='2'\r\n                  id='img'\r\n                  objectFit='contain'\r\n                  src={fetchData && fetchData.blog.image}></Image>\r\n              ) : (\r\n                <Image\r\n                  w='full'\r\n                  pt='2'\r\n                  h='300px'\r\n                  id='img'\r\n                  objectFit='contain'></Image>\r\n              )}\r\n            </FormControl>\r\n          </Center>\r\n          <Button\r\n            isDisabled={updatePending}\r\n            my='1'\r\n            color='brand.bgText'\r\n            w='full'\r\n            _hover='none'\r\n            bg='brand.main'\r\n            type='submit'>\r\n            {!updatePending ? 'Submit' : 'Submiting...'}\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Nav from './components/navbar/Nav';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { extendTheme } from '@chakra-ui/react';\nimport { userLoginContext, themeContext } from './components/contexts/context';\nimport { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport Profile from './components/Profile';\nimport Edit from './components/Edit';\nfunction App() {\n  const [currentTheme, setCurrentTheme] = useState(false);\n\n  const colors = extendTheme(\n    //light mode\n    !currentTheme\n      ? {\n          colors: {\n            brand: {\n              main: '#1C9B75',\n              bgText: 'white',\n              text: 'black',\n              subText: 'gray',\n              bg: 'white',\n              gray: '#cccccc',\n            },\n          },\n        }\n      : //dark mode\n        {\n          colors: {\n            brand: {\n              bg: '#3b4252',\n              main: '#18b888',\n              bgText: 'white',\n              text: 'white',\n              subText: '#a3a3a3',\n              gray: '#4c5363',\n            },\n          },\n        }\n  );\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = jwt.decode(token);\n      if (user) {\n        setUserLogin(user);\n      }\n    }\n  }, []);\n  const [userLogin, setUserLogin] = useState(false);\n\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <ChakraProvider theme={colors}>\n          <themeContext.Provider value={{ currentTheme, setCurrentTheme }}>\n            <userLoginContext.Provider value={{ userLogin, setUserLogin }}>\n              <Nav />\n              <Switch>\n                <Route exact path='./' component={Dashboard} />\n                <Route exact path='./login' component={Login} />\n                <Route exact path='./register' component={Register} />\n                <Route exact path='./profile/:id' component={Profile} />\n                <Route exact path='./edit/:id' component={Edit} />\n              </Switch>\n            </userLoginContext.Provider>\n          </themeContext.Provider>\n        </ChakraProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}